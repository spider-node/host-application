<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.14</version>
    <relativePath></relativePath>
  </parent>

  <groupId>cn.spider-node</groupId>
  <artifactId>code-agent</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <maven-jar-plugin-version>3.1.0</maven-jar-plugin-version>
    <druid.version>1.1.18</druid.version>
    <dependency.fastjson.version>1.2.83</dependency.fastjson.version>
    <mybatis.version>3.5.7</mybatis.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${dependency.fastjson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>com.baomidou</groupId>
      <artifactId>mybatis-plus-boot-starter</artifactId>
      <version>${mybatis.version}</version>
    </dependency>

    <dependency>
      <groupId>com.baomidou</groupId>
      <artifactId>mybatis-plus-generator</artifactId>
      <version>3.5.7</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.31</version>
    </dependency>

    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>3.14.9</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>listenablefuture</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.20</version>
    </dependency>

    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-all</artifactId>
      <version>5.8.19</version>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.txt</include>
          <include>**/*.properties</include>
          <include>*.xml</include>
        </includes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- compiler插件参数设置，指定编码 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>utf-8</encoding>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!--  这个插件是关键  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-5</version>
        <configuration>
          <!--  这个是assembly 所在位置 -->
          <descriptor>src/main/assembly/assembly.xml</descriptor>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin-version}</version>
        <configuration>
          <archive>
            <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
            <addMavenDescriptor>true</addMavenDescriptor>
            <manifest>
              <!-- 是否要把第三方jar放到manifest的classpath中 -->
              <addClasspath>true</addClasspath>
              <!-- 生成的manifest中classpath的前缀，填写依赖jar包相对于项目jar包的路径-->
              <!--我会把项目的jar包也打到lib目录下，所以这里使用当前目录-->
              <classpathPrefix>./</classpathPrefix>
              <!-- 应用的main class -->
              <mainClass>cn.spider.framework.code.agent.MainVerticle</mainClass>
            </manifest>
            <!--将资源文件目录添加到classpath中，打包后运行项目时则会在该目录下加载配置文件-->
            <manifestEntries>
              <!--填写配置文件相对于项目jar包的路径-->
              <!--我的项目jar包在lib目录下，配置文件在和lib同级的conf目录下-->
              <Class-Path>../conf/</Class-Path>
            </manifestEntries>
          </archive>
          <!--项目打包为jar包时排除这些文件，如果将配置文件打到jar包，则会优先读取jar包中的配置文件，不会读取conf目录下的配置文件-->
          <!--注意这玩意从编译结果目录开始算目录结构-->
          <excludes>
            <exclude>/*.yaml</exclude>
            <exclude>/*.yml</exclude>
            <exclude>/*.xml</exclude>
          </excludes>
        </configuration>
      </plugin>

    </plugins>
    <finalName>code-agent</finalName>
  </build>


</project>
